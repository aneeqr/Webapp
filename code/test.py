from flask import Flask,jsonify
from flask_restful import Api, Resource, reqparse
from parsing import parse_init,check_parse
from reverse_geocoding import get_coordinates
from streetlevel import street_level_stats,no_graph_made
from osm_graph import create_graph,create_graph2
from building import building_info
from routing import amenity_by_distance
from graph_html import generate_html
from Natural_Cat import Nat_Cat
from crime import Crime
   

app = Flask(__name__)
api = Api(app)

# Define parser and request args
parser = parse_init()
# http://127.0.0.1:5000/inf?add1=1 Nethercott Place&add2= Heavitree&town=Exeter&county=Devon&PS=EX1 2TT&network_type=drive&search_radius=1609

class My_Data(Resource):
   def get(self):
       d = check_parse(parser)
       try:
          coord = get_coordinates(d.copy()) #PUT A CONDITION HERE
       except:
          print('Reverse Geocoding not successful!')
          coord = 'NA'
       v = create_graph(d.copy(),coord)
       if len(v) > 1:
           v = street_level_stats(v)
       else:
           v = no_graph_made()
       v2 = building_info(d.copy(),coord)
       df = v.join(v2)
       return jsonify(df.to_dict('records'))



class Amenities(Resource):
   def get(self):
      d = check_parse(parser)
      try:
         coord = get_coordinates(d.copy()) #PUT A CONDITION HERE h = 56 + ghtv xyz hdajs
         v = create_graph2(d.copy(),coord)
         if len(v) > 1:
             return(jsonify(amenity_by_distance(v[3],v[0],coord['latitude'],coord['longitude'])))
         else:
            return('Routing Failed!')
      except:
         return('Reverse Geocoding not successful!')

class Graph_html(Resource):
   def get(self):
      d = check_parse(parser)
      frame=''
      try:
         coord = get_coordinates(d.copy())
         v = create_graph2(d.copy(),coord)
         if len(v) > 1:
            frame= generate_html(v,coord)
         else:
            frame='Graph not generated by POI... Manually enter the coordinates in the query!' 
      except:
         frame = 'Reverse Geocoding not successful! Manually enter coordinates'

      return frame


class NatCat(Resource):
   def get(self):
      d = check_parse(parser)
      try:
         return jsonify(Nat_Cat(d.copy()))
      except:
         return 'Information could not be retrieved, enter a valid address!'
         
class Crime_stats(Resource):
   def get(self):
      d = check_parse(parser)
      try:
         return jsonify(Crime(d.copy()).to_dict('records'))
      except:
         return 'Information could not be retrieved, enter a valid address!'


api.add_resource(My_Data, '/inf')
api.add_resource(Amenities,'/route')
api.add_resource(Graph_html,'/htm')
api.add_resource(NatCat,'/natcat')
api.add_resource(Crime_stats,'/crime')

if __name__ == '__main__':
    app.run(debug=True,threaded=True)
    #app.config['SERVER_NAME'] = '130.12.12.13'
    #app.run('0.0.0.0',port=5000,debug=False) #host='0.0.0.0'
